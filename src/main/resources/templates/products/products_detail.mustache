{{>main/header}}

<style>

    /* 진행 상태바 컨테이너 */
.progress-container {
    position: relative;
    width: 100%;
    height: 70px; /* 높이를 조금 늘립니다 */
    margin: 20px 0;
}

.progress-bar {
    position: absolute;
    top: 38%; /* 중앙 정렬 */
    left: 10%; /* Qualification 원의 중앙에서 시작하도록 조정합니다 */
    transform: translateY(-50%);
    width: 0;
    height: 10px;
    background-color: green;
    transition: width 0.4s ease;
}

.progress-steps {
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 100%;
    margin: 20px 0;
    gap: clamp(50px, 30vw, 400px);
}

.step {
    width: 30px;
    height: 30px;
    border: 2px solid #ccc;
    border-radius: 50%;
    display: inline-block;
    position: relative;
    text-align: center;
    line-height: 30px;
    font-weight: bold;
    color: #fff;
    background-color: #ccc;
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

/* 텍스트 스타일 */
.step::after {
    content: attr(data-step);
    position: absolute;
    top: 40px; /* 동그라미 아래에 텍스트 배치 */
    left: 50%;
    transform: translateX(-50%);
    color: #000;
    font-weight: normal;
    font-size: 14px;
}

/* 상태별 동그라미 색상 */

.step.available.active {
    background-color: blue;
    border-color: blue;
}

.step.discontinued.active {
    background-color: gray;
    border-color: gray;
}

.step.out_of_stock.active {
    background-color: red;
    border-color: red;
}
</style>

<div id="layoutSidenav_content">
    <main>
        <div class="container-fluid px-4">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h1 class="mt-4">Products</h1>
                <button onclick="location.href='/products'" class="back-btn">🔙</button>
            </div>
            <ol class="breadcrumb mb-4">
                <li class="breadcrumb-item active">Products</li>
            </ol>

            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-table me-1"></i>
                    Products detail
                </div>
                <div class="card-body">

                    <table id="products_detail">
                        {{#products}}
                            <!-- 버튼 컨테이너 -->
                            <div class="button-container mb-3">
                                <a href="/products/detail/create" id="createButton" class="btn btn-custom-create btn-sm">
                                    <i class="fas fa-plus-circle"></i> 신규
                                </a>

                                {{#productId}}
                                    <button id="deleteButton" class="btn btn-custom-delete btn-sm">
                                        <i class="fas fa-trash-alt"></i> 삭제
                                    </button>
                                {{/productId}}
                                <a href="/products" class="btn btn-custom-select btn-sm" id="selectButton">
                                    <i class="fas fa-list"></i> 목록
                                </a>
                            </div>

                            <!-- 폼 시작 -->
                            {{#productId}}
                            <form id="productForm" action="/products/detail/{{productId}}/update" method="POST">
                            {{/productId}}
                            {{^productId}}
                            <form id="productForm" action="/products/detail/create" method="POST">
                            {{/productId}}

                            <div class="mb-3 row">
                                <label for="productName" class="col-sm-2 col-form-label">제품명:</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="productName" name="productName" value="{{productName}}" placeholder="예: AI Cloud" required>
                                </div>
                            </div>

                            <div class="mb-3 row">
                                <label for="category" class="col-sm-2 col-form-label">제품군:</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="productFamily" name="productFamily" value="{{#productFamily}}{{productFamily}}{{/productFamily}}{{^productFamily}}{{/productFamily}}" placeholder="예: AI Contact Center">
                                </div>
                            </div>

                            <div class="mb-3 row">
                                <label for="fixedPrice" class="col-sm-2 col-form-label">원가:</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control currency-input" id="fixedPrice" name="fixedPrice"
                                           value="{{ fixedPrice }}" placeholder="예: 50,000" required>
                                </div>
                            </div>

                            <div class="mb-3 row">
                                <label for="dealerPrice" class="col-sm-2 col-form-label">딜러가:</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control currency-input" id="dealerPrice" name="dealerPrice"
                                           value="{{ dealerPrice }}" placeholder="예: 45,000" required>
                                </div>
                            </div>

                            <div class="mb-3 row">
                                <label for="costPrice" class="col-sm-2 col-form-label">정찰가:</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control currency-input" id="costPrice" name="costPrice"
                                           value="{{ costPrice }}" placeholder="예: 55,000" required>
                                </div>
                            </div>

                            <div class="mb-3 row">
                                <label for="status" class="col-sm-2 col-form-label">상태:</label>
                                <div class="col-sm-10">
                                    <select class="form-control" id="productCondition" name="productCondition" required>
                                        <option value="available">available</option>
                                        <option value="out_of_stock">out_of_stock</option>
                                        <option value="discontinued">discontinued</option>
                                    </select>
                                </div>
                            </div>

                            <div class="mb-3 row">
                                <label for="category" class="col-sm-2 col-form-label">제품 설명:</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="productDescription" name="productDescription" value="{{#productDescription}}{{productDescription}}{{/productDescription}}{{^productDescription}}{{/productDescription}}" placeholder="제품 설명을 입력해주세요.(50자 이내)">
                                </div>
                            </div>

                            <div class="d-flex justify-content-end">
                                <button type="submit" id="updateButton" class="btn btn-custom-update btn-sm">
                                    <i class="fas fa-save"></i> 저장
                                </button>
                            </div>
                        </form>
                        {{/products}}
                    </form>
                    </table>
                </div>
            </div>

        {{#productId}}
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table me-1"></i>
                Product Status
            </div>
            <div class="card-body">
                <table id="products_status">

                    {{#products}}
                        <tbody>
                        <div class="progress-container">
                            <div class="progress-steps">
                                <div class="step available" data-step="available"></div>
                                <div class="step out_of_stock" data-step="out_of_stock"></div>
                                <div class="step discontinued" data-step="discontinued"></div>
                            </div>
                        </div>
                        </tbody>
                    {{/products}}
                </table>
            </div>
        </div>
        {{/productId}}
        </div>
    </main>

    <script>
        // CRUD 메시지
        {{#message}}
            alert("{{message}}");
        {{/message}}



        // 초기값 설정
        // 원화 표시
        document.addEventListener("DOMContentLoaded", function () {
    let inputs = document.querySelectorAll(".currency-input");

    // 🔹 초기값을 원화(₩) 형식으로 변환
    inputs.forEach(input => {
        if (input.value) {
            input.value = formatCurrency(input.value); // 초기값 원화 변환
        }

        // 🔹 입력할 때 원화 형식 적용
        input.addEventListener("input", function () {
            let numericValue = input.value.replace(/[^0-9]/g, ''); // 숫자만 남기기
            if (numericValue) {
                input.value = formatCurrency(numericValue);
            }
        });

        // 🔹 폼 제출 시 숫자만 서버로 전송 (₩, , 제거)
        input.form.addEventListener("submit", function () {
            let numericValue = input.value.replace(/[^0-9]/g, ''); // 숫자로 변환
            input.value = numericValue;
        });
    });
});

// 원화 포맷 함수 (₩ 적용)
function formatCurrency(value) {
    let number = parseFloat(value);
    if (!isNaN(number)) {
        return new Intl.NumberFormat('ko-KR', { style: 'currency', currency: 'KRW' }).format(number);
    }
    return value;
}

    {{#products}}
        document.addEventListener("DOMContentLoaded", function() {
            var productCondition = "{{productCondition}}";

            // 상태에 따른 진행상황 표시
            var progressSteps = document.querySelectorAll(".step");
            var steps = ["available", "out_of_stock", "discontinued"];
            var currentIndex = steps.indexOf(productCondition);

            // 진행상황에 해당하는 동그라미만 채우기
            if (currentIndex !== -1) {
                progressSteps[currentIndex].classList.add("active");
            }

            // 폼에 데이터 채우기
            var productConditionSelect = document.getElementById("productCondition");
            if (productConditionSelect) {
                productConditionSelect.value = productCondition;
            }

            var form = document.getElementById("productForm");
            var currentUrl = window.location.pathname;
            if (form && currentUrl === "/products/detail/create") {
                form.action = "/products/detail/create";
            }

        {{#productId}}
        var deleteButton = document.getElementById("deleteButton");
        if (deleteButton) {
            deleteButton.addEventListener("click", function () {
                // 서버에서 렌더링된 productId 가져오기
                var productId = "{{productId}}";

                if (productId) {
                    var confirmDelete = confirm("현재 항목을 삭제하시겠습니까?");
                    if (confirmDelete) {
                        fetch(`/products/detail/${productId}/delete`, {
                            method: "POST", // 서버 엔드포인트가 POST를 지원해야 함
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({ id: productId }), // 올바른 데이터 전송
                        })
                            .then((response) => {
                                if (response.ok) {
                                    alert("삭제되었습니다.");
                                    window.location.href = "/products"; // 삭제 후 이동
                                } else {
                                    alert("삭제 중 오류가 발생했습니다.");
                                }
                            })
                            .catch((error) => {
                                console.error("Error:", error);
                                alert("삭제 중 오류가 발생했습니다.");
                            });
                    }
                } else {
                    alert("삭제할 ID가 없습니다.");
                }
            });
            }
    {{/productId}}
        });
    {{/products}}
        document.addEventListener("DOMContentLoaded", function () {
    var updateButton = document.getElementById("updateButton");

    if (!updateButton) {
        console.error("❌ updateButton을 찾을 수 없음! 버튼이 HTML에 존재하는지 확인하세요.");
    } else {
        console.log("✅ updateButton 찾음! 이벤트 리스너 등록 중...");

        updateButton.addEventListener("click", function (event) {
            console.log("🛠 updateButton 클릭됨! confirm() 실행 예정...");

            var confirmSave = confirm("변경사항을 저장하겠습니까?");
            if (!confirmSave) {
                console.log("❌ 사용자가 취소를 눌렀습니다.");
                event.preventDefault();
            } else {
                console.log("✅ 사용자가 확인을 눌렀습니다. 저장 진행!");
            }
        });
    }
});


        document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("productForm");

        form.addEventListener("submit", function (event) {
            event.preventDefault(); // 폼 제출 방지

            if (validateForm()) {
                form.submit(); // 검증 통과 시 제출
            }
        });

        function validateForm() {
            let isValid = true;

            // 제품명 검증 (필수 입력)
            const productName = document.getElementById("productName");
            if (!productName.value.trim()) {
                alert("제품명은 필수입니다.");
                isValid = false;
            }

            // 가격 검증 (필수 입력, 숫자 확인)
            const fixedPrice = document.getElementById("fixedPrice");
            const dealerPrice = document.getElementById("dealerPrice");
            const costPrice = document.getElementById("costPrice");

            if (!fixedPrice.value.trim() || isNaN(fixedPrice.value)) {
                alert("원가는 필수이며 숫자여야 합니다.");
                isValid = false;
            }

            if (!dealerPrice.value.trim() || isNaN(dealerPrice.value)) {
                alert("딜러가는 필수이며 숫자여야 합니다.");
                isValid = false;
            }

            if (!costPrice.value.trim() || isNaN(costPrice.value)) {
                alert("정찰가는 필수이며 숫자여야 합니다.");
                isValid = false;
            }

            // 제품 상태 검증 (`available`, `out_of_stock`, `discontinued` 중 하나)
            const productCondition = document.getElementById("productCondition");
            const validConditions = ["available", "out_of_stock", "discontinued"];
            if (!validConditions.includes(productCondition.value)) {
                alert("제품 상태는 'available', 'out_of_stock', 'discontinued' 중 하나여야 합니다.");
                isValid = false;
            }

            // 제품 문의사항 검증 (최대 50자)
            const productDescription = document.getElementById("productDescription");
            if (productDescription.value.length > 50) {
                alert("제품 문의사항은 50자 이내로 입력해야 합니다.");
                isValid = false;
            }

            // 제품군 검증 (최대 50자)
            const productFamily = document.getElementById("productFamily");
            if (productFamily.value.length > 50) {
                alert("제품군은 50자 이내로 입력해야 합니다.");
                isValid = false;
            }


            return isValid;
        }
    });

    </script>

    {{>main/footer}}
